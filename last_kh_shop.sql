


CREATE TABLE CATEGORIES (
	CATEGORY_ID  NUMBER CONSTRAINT IDPK PRIMARY KEY
	,CATEGORY_NAME  VARCHAR2(100) CONSTRAINT NAMEUK  UNIQUE
);

SELECT * FROM CATEGORIES;

INSERT INTO CATEGORIES VALUES (1,'스마트폰');
INSERT INTO CATEGORIES VALUES (2,'TV');
INSERT INTO CATEGORIES VALUES (3,'Gaming');


CREATE TABLE PRODUCTS (
	PRODUCT_ID  NUMBER CONSTRAINT PRODUCTIDPK PRIMARY KEY
	,PRODUCT_NAME  VARCHAR2(100) CONSTRAINT PRODUCTNAMEUK NOT NULL
	,CATEGORY NUMBER CONSTRAINT PRODUCTCATEGORY  REFERENCES CATEGORIES --이거 왜 CONTRAINT 꼭 붙여야 됨???
	,PRICE NUMBER DEFAULT 0
	,STOCK_QUANTITY NUMBER DEFAULT 0
);


CREATE TABLE CUSTOMERS (
	CUSTOMER_ID  NUMBER  PRIMARY KEY
	,NAME  VARCHAR2(20) NOT NULL
	,GENDER CHAR(3) CHECK (GENDER IN ('남','여') )
	,ADDRESS  VARCHAR2(100)
	,PHONE  VARCHAR2(30)
);

INSERT INTO CUSTOMERS VALUES (1,'홍길동','남', '서울시 성동구 왕십리', '010-1111-2222');
INSERT INTO CUSTOMERS VALUES (2,'유관순','여', '서울시 종로구 안국동', '010-3333-1111');


CREATE TABLE ORDERS (
	ORDER_ID  NUMBER  PRIMARY KEY
	,ORDER_DATE  DATE DEFAULT SYSDATE
	,STATUS CHAR(1) CHECK (STATUS IN ('Y','N') )
	,CUSTOMER_ID NUMBER CONSTRAINT ORDERSID REFERENCES CUSTOMERS ON DELETE CASCADE
);


CREATE TABLE ORDERS_DETAILS (
	ORDER_DETAIL_ID  NUMBER  PRIMARY KEY
	,ORDER_ID  NUMBER REFERENCES ORDERS ON DELETE CASCADE
	,PRODUCT_ID NUMBER REFERENCES PRODUCTS ON DELETE CASCADE
	,QUNTITY NUMBER
	,PRICE_PER_UNIT NUMBER
);


SELECT * FROM PRODUCTS;

INSERT INTO PRODUCTS VALUES (101,'Apple iPhone 12',1,1500000,30);
INSERT INTO PRODUCTS VALUES (102,'Samsug Galaxy S24',1,1800000,50);
INSERT INTO PRODUCTS VALUES (201,'LG OLED TV',2,3600000,10);
INSERT INTO PRODUCTS VALUES (301,'Sony Playstation5',3,700000,15);

SELECT * FROM PRODUCTS;



SELECT * FROM customers;


SELECT * FROM orders;



INSERT INTO orders VALUES (576,'2024-02-29', 'N', 1);
INSERT INTO orders VALUES (978,'2024-03-11', 'Y', 2);
INSERT INTO orders VALUES (777,'2024-03-11', 'N', 2);
INSERT INTO orders VALUES (134,'2022-12-25', 'Y', 1);
INSERT INTO orders VALUES (499,'2020-01-03', 'Y', 1);

SELECT * FROM orders;



SELECT * FROM orders_details;

INSERT INTO orders_details VALUES (111, 576, 101, 1, 1500000);
INSERT INTO orders_details VALUES (222, 978, 201, 2, 3600000);
INSERT INTO orders_details VALUES (333, 978, 102, 1, 1800000);
INSERT INTO orders_details VALUES (444, 777, 301, 5, 700000);
INSERT INTO orders_details VALUES (555, 134, 102, 1, 1800000);

SELECT * FROM orders_details;





--1번문제

SELECT name 고객명 , order_date 주문일 , status 처리상태 FROM orders JOIN CUSTOMERS USING (CUSTOMER_ID) WHERE ORDERS.STATUS ='N'
;

--2번문제

SELECT order_id 주문번호, order_date 주문날짜, status 처리상태  FROM orders JOIN CUSTOMERS  USING (CUSTOMER_ID)
WHERE EXTRACT(YEAR FROM ORDERS.ORDER_DATE) = '2024' AND  CUSTOMERS.NAME ='홍길동'  
; 


--3번문제




SELECT EXTRACT (YEAR FROM order_date ), sum (PRICE * QUANTITY), ORDER_ID 주문번호 , PRODUCT_NAME 상품명 , QUNTITY 수량 , PRICE "주문별 금액 합계"      
FROM  ORDERS JOIN orders_details USING (order_id) JOIN products USING (product_id) WHERE ORDERS.CUSTOMER_ID =2 GROUP BY EXTRACT(YEAR FROM order_date)  ;


SELECT * FROM customers;

SELECT * FROM products;

SELECT * FROM orders;

SELECT * FROM orders_details;

SELECT * FROM categories;
